"""
This is the test for 7-base_geometry module.
"""

# Importing the function from the module:
    >>> BaseGeometry = __import__('7-base_geometry').BaseGeometry
    >>> base_geometry = BaseGeometry()

# Testing for module docstring:
    >>> m = __import__("7-base_geometry").__doc__
    >>> len(m) > 1
    True

# Testing for class docstring:
    >>> c = __import__("7-base_geometry").__doc__
    >>> len(c) > 1
    True

# Testing valid case :
>>> base_geometry.integer_validator("John", 12)

# Testing wrong type first argument :
>>> base_geometry.integer_validator("John", "not_a_int")
Traceback (most recent call last):
    ...
TypeError: John must be an integer

# Testing wrong value second argument :
>>> base_geometry.integer_validator("John", -12)
Traceback (most recent call last):
    ...
ValueError: John must be greater than 0


# Testing NaN value for second argument:
>>> base_geometry.integer_validator("John", float('nan'))
Traceback (most recent call last):
    ...
TypeError: John must be an integer

# Testing inf value for second argument:
>>> base_geometry.integer_validator("John", 1e400)
Traceback (most recent call last):
    ...
TypeError: John must be an integer

# Testing none value:
>>> base_geometry.integer_validator("John", None)
Traceback (most recent call last):
    ...
TypeError: John must be an integer
